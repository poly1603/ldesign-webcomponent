// ==================== 响应式断点定义 ====================
@mobile-breakpoint: 768px;
@tablet-breakpoint: 1024px;
@desktop-breakpoint: 1280px;
@wide-screen-breakpoint: 1920px;

// ==================== 移动设备优化 ====================

.drawer-mobile {
  // 移动设备特定样式
  // 全屏模式例外：不应用尺寸限制
  &:not(.drawer-fullscreen) .drawer-wrapper {
    // 确保移动端抽屉不超出屏幕
    max-width: 100vw !important;
    max-height: 100vh !important;
  }
  
  .drawer-wrapper {
    // 更平滑的触摸滚动
    -webkit-overflow-scrolling: touch;
    
    // touch-action 设置：允许按方向滚动，但阻止不相关的触摸手势
    &.drawer-left,
    &.drawer-right {
      touch-action: pan-y pinch-zoom; // 水平抽屉允许垂直滚动
    }
    
    &.drawer-top,
    &.drawer-bottom {
      touch-action: pan-x pinch-zoom; // 垂直抽屉允许水平滚动
    }
    
    // 禁用长按选中
    -webkit-user-select: none;
    user-select: none;
    
    // 禁用高亮
    -webkit-tap-highlight-color: transparent;
    
    // GPU 加速 - 不使用 transform，避免覆盖动画的 transform
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    
    // 移动端拖动时禁用过渡
    &.drawer-dragging {
      transition: none !important;
    }
    
    // 渲染优化
    contain: layout style paint;
  }
  
  .drawer-content {
    // 内容区域滚动优化
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
    
    // 防止过度滚动
    overscroll-behavior-y: contain;
  }
  
  // 底部抽屉适配虚拟键盘和安全区域
  &.drawer-bottom .drawer-wrapper {
    padding-bottom: env(safe-area-inset-bottom, 0);
    padding-bottom: constant(safe-area-inset-bottom, 0);
    transition: padding-bottom 0.3s ease;
    
    // 键盘弹起时的适配
    &.drawer-keyboard-open {
      padding-bottom: calc(env(safe-area-inset-bottom, 0) + var(--keyboard-height, 0));
    }
  }
  
  // 移动端关闭按钮更大以提高可点击性
  .drawer-close-btn {
    min-width: 44px;
    min-height: 44px;
    padding: 12px;
    position: relative; // 确保定位上下文正确
    
    // 增加触摸区域
    &::before {
      content: '';
      position: absolute;
      top: -8px;
      right: -8px;
      bottom: -8px;
      left: -8px;
      pointer-events: none; // 关键修复：伪元素不应拦截事件
    }
  }
  
  // 滑动手柄更明显
  .drawer-swipe-handle {
    height: 6px;
    padding: 12px 0;
    
    .drawer-swipe-indicator {
      width: 60px;
      height: 6px;
      background-color: var(--drawer-border-color, #e5e5e5);
      opacity: 0.6;
      border-radius: 3px;
      transition: opacity 0.2s, transform 0.2s;
      
      &:active {
        opacity: 1;
        transform: scaleX(1.2);
      }
    }
  }
  
  // 移动端动画优化 - 使用更流畅的动画
  .drawer-wrapper {
    // 使用适中的动画时间，不要过快或过慢
    // 注意：不强制覆盖，使用组件设置的时长
    transition-property: transform, opacity !important;
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1) !important; // 更平滑的缓动函数
    
    // GPU加速 - 使用 will-change 而不是 transform
    will-change: transform, opacity;
  }
  
  // 遭罩层动画也要同步
  .drawer-mask {
    transition-property: opacity !important;
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1) !important;
  }
}

// ==================== 性能模式样式 ====================

.drawer-performance {
  .drawer-wrapper {
    // 启用硬件加速
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
    
    // CSS Containment
    contain: layout style paint;
    
    // 减少重绘
    isolation: isolate;
  }
  
  .drawer-content {
    // 优化重排
    contain: layout style;
    will-change: scroll-position;
  }
  
  // 禁用不必要的阴影和效果
  &.drawer-low-performance {
    .drawer-wrapper {
      box-shadow: none !important;
    }
    
    * {
      text-shadow: none !important;
      filter: none !important;
    }
  }
}

// ==================== 响应式设计 ====================

// 移动设备 (手机)
@media (max-width: @mobile-breakpoint) {
  :host,
  .ldesign-drawer-container {
    // 左右侧抽屉的移动端优化
    &.drawer-left,
    &.drawer-right {
      // 全屏模式例外：不限制尺寸
      &:not(.drawer-fullscreen) .drawer-wrapper {
        // 使用 min 函数确保不超出屏幕
        width: min(85vw, calc(100vw - 48px)) !important;
        max-width: 100vw !important;
        max-height: 100vh !important;
      }
    }
    
    // iPhone X 等刘海屏适配（非全屏模式）
    @supports (padding-left: env(safe-area-inset-left)) {
      &.drawer-left:not(.drawer-fullscreen) .drawer-wrapper {
        padding-left: env(safe-area-inset-left);
        max-width: calc(100vw - env(safe-area-inset-left)) !important;
      }
      &.drawer-right:not(.drawer-fullscreen) .drawer-wrapper {
        padding-right: env(safe-area-inset-right);
        max-width: calc(100vw - env(safe-area-inset-right)) !important;
      }
    }
    
    // 上下抽屉的移动端优化
    &.drawer-top,
    &.drawer-bottom {
      // 全屏模式例外：不限制尺寸
      &:not(.drawer-fullscreen) .drawer-wrapper {
        width: 100vw !important;
        max-width: 100vw !important;
        height: auto !important;
        max-height: min(80vh, calc(100vh - 60px)) !important;
        min-height: 200px;
      }
    }
    
    // 底部抽屉特殊处理（非全屏模式）
    &.drawer-bottom:not(.drawer-fullscreen) .drawer-wrapper {
      border-radius: var(--drawer-radius, 12px) var(--drawer-radius, 12px) 0 0;
      max-height: calc(100vh - 60px) !important; // 保留顶部空间
      
      // 支持安全区域
      @supports (padding-bottom: env(safe-area-inset-bottom)) {
        max-height: calc(100vh - env(safe-area-inset-bottom) - 20px) !important;
      }
      
      // 支持手势下拉关闭的视觉提示
      &::before {
        content: '';
        position: absolute;
        top: 8px;
        left: 50%;
        transform: translateX(-50%);
        width: 36px;
        height: 4px;
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 2px;
      }
    }
    
    // 顶部抽屉也需要限制（非全屏模式）
    &.drawer-top:not(.drawer-fullscreen) .drawer-wrapper {
      max-height: calc(100vh - 60px) !important;
      
      @supports (padding-top: env(safe-area-inset-top)) {
        max-height: calc(100vh - env(safe-area-inset-top) - 20px) !important;
      }
    }
    
    .drawer-header {
      padding: 12px 16px;
      
      .drawer-title {
        font-size: 16px;
        font-weight: 600;
      }
      
      .drawer-subtitle {
        font-size: 13px;
      }
    }
    
    .drawer-content {
      padding: 16px;
      
      // 移动端内容最大宽度
      max-width: 100%;
    }
    
    .drawer-footer {
      padding: 12px 16px;
      
      // 移动端按钮堆叠布局
      .drawer-footer-buttons {
        flex-direction: column-reverse;
        gap: 8px;
        
        .drawer-btn {
          width: 100%;
          padding: 12px 16px;
          font-size: 14px;
          
          // 主按钮更突出
          &.drawer-btn-primary {
            padding: 14px 16px;
            font-weight: 600;
          }
        }
      }
    }
  }
}

// 小屏幕移动设备
@media (max-width: 480px) {
  :host,
  .ldesign-drawer-container {
    // 全屏模式例外：不限制尺寸
    &.drawer-left:not(.drawer-fullscreen),
    &.drawer-right:not(.drawer-fullscreen) {
      .drawer-wrapper {
        width: min(90vw, calc(100vw - 32px)) !important;
        max-width: 100vw !important;
      }
    }
    
    // 全屏模式例外：不限制尺寸
    &.drawer-top:not(.drawer-fullscreen),
    &.drawer-bottom:not(.drawer-fullscreen) {
      .drawer-wrapper {
        max-height: min(85vh, calc(100vh - 40px)) !important;
      }
    }
    
    .drawer-title {
      font-size: 15px;
    }
    
    .drawer-subtitle {
      font-size: 12px;
    }
    
    .drawer-btn {
      font-size: 13px;
      padding: 10px 14px;
    }
  }
}

// 平板设备
@media (min-width: (@mobile-breakpoint + 1px)) and (max-width: @tablet-breakpoint) {
  :host,
  .ldesign-drawer-container {
    .drawer-wrapper {
      &.drawer-left,
      &.drawer-right {
        width: 60%;
        max-width: 500px;
      }
      
      &.drawer-top,
      &.drawer-bottom {
        height: auto;
        max-height: 70vh;
      }
    }
    
    .drawer-header {
      padding: 16px 20px;
    }
    
    .drawer-content {
      padding: 20px;
    }
    
    .drawer-footer {
      padding: 16px 20px;
      
      .drawer-footer-buttons {
        flex-direction: row;
        
        .drawer-btn {
          min-width: 100px;
        }
      }
    }
  }
}

// 桌面设备
@media (min-width: @desktop-breakpoint) {
  :host,
  .ldesign-drawer-container {
    .drawer-wrapper {
      // 桌面端保持默认尺寸
      transition: transform var(--drawer-animation-duration, 300ms) var(--drawer-animation-easing, ease-in-out),
                  opacity var(--drawer-animation-duration, 300ms) var(--drawer-animation-easing, ease-in-out);
    }
    
    // 桌面端支持更复杂的动画
    &.drawer-animation-slide-fade {
      .drawer-wrapper {
        animation: drawer-slide-fade-in 0.3s ease-out;
      }
    }
  }
}

// 宽屏设备
@media (min-width: @wide-screen-breakpoint) {
  :host,
  .ldesign-drawer-container {
    .drawer-wrapper {
      &.drawer-left,
      &.drawer-right {
        max-width: 600px;
      }
    }
  }
}

// ==================== 特殊场景适配 ====================

// 横屏模式优化
@media (orientation: landscape) and (max-width: @tablet-breakpoint) {
  :host,
  .ldesign-drawer-container {
    .drawer-bottom .drawer-wrapper {
      max-height: 90vh; // 横屏时增加高度
    }
    
    .drawer-left .drawer-wrapper,
    .drawer-right .drawer-wrapper {
      width: 50%; // 横屏时减少宽度
      max-width: 400px;
    }
  }
}

// 高 DPI 屏幕优化
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  :host,
  .ldesign-drawer-container {
    .drawer-wrapper {
      // 使用更细的边框
      border: 0.5px solid var(--drawer-border-color, #e5e5e5);
    }
    
    .drawer-resize-handle {
      // 高分辨率屏幕下的 1px 边框
      &::after {
        content: '';
        position: absolute;
        background: var(--drawer-border-color, #e5e5e5);
      }
      
      &.drawer-resize-handle-left::after,
      &.drawer-resize-handle-right::after {
        width: 1px;
        height: 100%;
        top: 0;
        transform: scaleX(0.5);
        transform-origin: center;
      }
      
      &.drawer-resize-handle-top::after,
      &.drawer-resize-handle-bottom::after {
        width: 100%;
        height: 1px;
        left: 0;
        transform: scaleY(0.5);
        transform-origin: center;
      }
    }
  }
}

// ==================== 主题适配 ====================

// 暗黑模式支持
@media (prefers-color-scheme: dark) {
  :host(:not(.drawer-theme-light)),
  .ldesign-drawer-container:not(.drawer-theme-light) {
    --drawer-bg: #1f1f1f;
    --drawer-text-color: #e0e0e0;
    --drawer-border-color: #333;
    --drawer-mask-bg: rgba(0, 0, 0, 0.75);
    --drawer-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
    
    .drawer-wrapper {
      background-color: var(--drawer-bg);
      color: var(--drawer-text-color);
      border-color: var(--drawer-border-color);
    }
    
    .drawer-mask {
      background-color: var(--drawer-mask-bg);
    }
    
    .drawer-swipe-indicator {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }
}

// 高对比度模式
@media (prefers-contrast: high) {
  :host,
  .ldesign-drawer-container {
    .drawer-wrapper {
      border: 2px solid currentColor;
    }
    
    .drawer-btn {
      border: 2px solid currentColor;
    }
  }
}

// ==================== 动画优化 ====================

// 动画减弱模式
@media (prefers-reduced-motion: reduce) {
  :host,
  .ldesign-drawer-container {
    --drawer-animation-duration: 0.01ms;
    
    .drawer-wrapper,
    .drawer-mask {
      animation: none !important;
      transition-duration: 0.01ms !important;
    }
    
    * {
      animation-duration: 0.01ms !important;
      transition-duration: 0.01ms !important;
    }
  }
}

// ==================== 打印样式 ====================

@media print {
  :host,
  .ldesign-drawer-container {
    display: none !important;
  }
}

// ==================== 特殊状态动画 ====================

@keyframes drawer-slide-fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes drawer-bounce-in {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

// ==================== 触摸反馈 ====================

.drawer-touch-feedback {
  // 触摸时的视觉反馈
  .drawer-btn,
  .drawer-close-btn,
  .drawer-back-btn {
    position: relative;
    overflow: hidden;
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: rgba(0, 0, 0, 0.1);
      transform: translate(-50%, -50%);
      transition: width 0.3s, height 0.3s;
    }
    
    &:active::after {
      width: 100%;
      height: 100%;
    }
  }
}